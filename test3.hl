module Test3;

class Vec<T> {
    *T value;
    i64 length;
    i64 element_size;

    fn void constructor() {
        self.value = fficall malloc(0);
        self.element_size = fficall sizeof(self.value[0]);
        self.length = 0;
    }

    fn T __index__(i64 idx) {
        return self.value[idx];
    }

    fn void __l_index__(i64 idx, T value) {
        if (idx > self.length) {
            self.value = fficall realloc(self.value, self.element_size * idx);
            self.length = idx;
        }
        self.value[idx] = value;
    }
}

class String<> {
    Vec<i32> code_points;

    fn void constructor() {
        self.code_points = new Vec();
    }

    static fn String fromBytes(*i8 bytes, i64 length) {
        return new String();
    }
}

static fn i32 main() {
    String.fromBytes(fficall malloc(0), 0);

    return 0;
}
