module main;

class Parent<T> {
    T value;
    fn void constructor(T initial) {
        self.value = initial;
    }

    fn T get() {
        return self.value;
    }
}

class Derived<T> extends Parent {
    T value2;
    fn void constructor(T initial, T initial2) {
        self.value = initial;
        self.value2 = initial2;
    }

    fn T get() {
        return self.value + self.value2;
    }
}

static fn i32 Main() {
    let Parent<i32> obj = new Derived<i32>(34, 35);
    return obj.get();
}
