module TestInput;

static fn i32 puts(*i8 s);
static fn *i8 realloc(*i8 ptr, i64 size);

class String {
    *i8 buffer;
    i64 length;
    i64 allocated_length;

    fn void setCharacter(i64 offset, i8 c) {
        if offset < self.length {
            self.buffer*[offset] = c;
        }
        return;
    }

    fn void pushCharacter(i8 c) {
        if self.allocated_length < (self.length + 1) {
            self.allocated_length = (self.allocated_length * 2) + 1;
            self.buffer = realloc(self.buffer, self.allocated_length);
        }
        self.buffer*[self.length] = c;
        self.length = self.length + 1;
        return;
    }

    fn *i8 c_str() {
        return self.buffer;
    }

    static fn String fromBytes(*i8 buffer) {
        return new String;
    }
}

static fn i32 main() {
    let s1 String;
    s1 = new String;
    String.fromBytes(s1.c_str());
    return 0;
}

