fn i32 puts(_rawptr_i8 s);
fn _rawptr_i8 malloc(i32 size);

class String {
    _rawptr_i8 buffer;
    i32 length;

    fn void construct(String self, i32 length) {
        self.buffer = malloc(length);
        self.length = length;
        __asm__ ret void;
    }

    fn void print(String self) {
        puts(self.buffer);
        __asm__ ret void;
    }

    fn void setCharacter(String self, i32 pos, i8 char) {
        // no array indexing yet...
        __asm__ %1 = getelementptr %String, %String* %self, i64 0, i32 0;
        __asm__ %2 = load i8*, i8** %1;
        __asm__ %3 = getelementptr i8, i8* %2, i32 %pos;
        __asm__ store i8 %char, i8* %3;
        __asm__ ret void;
    }
}

fn i32 main() {
    let s String;
    // s = new String;
    s.construct(s, 1);
    s.setCharacter(s, 0, 65);
    s.print(s);
    // __String_construct(s, 1);
    // __String_setCharacter(s, 0, 65);
    // __String_print(s);

    // __asm__ %s = alloca %String;
    // __asm__ call void @__String_construct(%String* %s, i32 1);
    // __asm__ call void @__String_setCharacter(%String* %s, i32 0, i8 65);
    // __asm__ call void @__String_print(%String* %s);
    __asm__ ret i32 0;
}
