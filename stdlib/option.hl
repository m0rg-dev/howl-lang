class Option<T> {
    bool has_value;
    *T value;

    fn void constructor() {
        self.value = $typednull();
        $pointer_assign(unsafe.malloc($sizeof(self.value[0])), self.value);
        self.has_value = false;
    }

    static fn Self some(T value) {
        let Self rc = new Self();
        rc.value[0] = value;
        rc.has_value = true;
        return rc;
    }

    static fn Self none() {
        return new Self();
    }

    fn T unwrap() throws NoSuchValueException {
        if self.has_value {
            return self.value[0];
        } else {
            throw new NoSuchValueException();
        }
    }

    fn bool isSome() {
        return self.has_value;
    }
}

class NoSuchValueException extends UncheckedException {
    fn void constructor() {
        super.constructor("Attempt to unwrap none value");
    }
}
